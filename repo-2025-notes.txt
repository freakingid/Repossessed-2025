20250322
** Working on Crates still

** We are changing a lot about Crates. In order for them to bounce properly while at rest, they have to be a StaticBody2D. But we cannot carry that, so we'll turn it into a CharacterBody2D when the player is carrying it, BUT that cannot have precise collisions, so we'll have to approximate bullet ricochets the best we can.

** When all done with crates, we also need the player to NOT shoot a bullet when using the firing direction to drop a crate. So if you are carrying a crate and you drop it, you should not fire a bullet from the same input that causes the crate to drop.

NOTE * There are other things fro 20250319 that need moved up. I will do that after managing Crates.

20250319
DONE * Resized from 128px sprites to 32px.
** Happy accident: Regular skeletons can now find their way around walls. I think the change of scale allowed their movements to scale 4x and make a difference.

BUG * Zombie spawner is not spawning anything.

BUG * Player is not doing any melee fighting upon collision with enemies.
done ** Fixed collider signal error.
** However, Ghosts are sometimes colliding with player but not doing damage. Skeletons and Zombies never do damage, they just collide and stop.

BUG * All enemies, upon Melee with Player, need to have the player be invinicible / blinking for a time. That seems to have gone away or not be everywhere.

BUG * When player has Bounce Shot powerup, some of the shots hit a wall and seem to refract through the wall, rather than bounce back from it.

=================================================
* Add More enemies
=================================================
BUG * Adding Skeleton Shooter
?? When skeletons are blocked by wall, should they be still trying to go towards player?
?? It seems like the skeleton is trying to shoot at the player even when there is a wall in the way. We are supposed to be testing for line of sight.
** Is wandering is only when they are FAR from the player and blocked vision

DONE * Add Bat
** ChatGPT asks:
```
Want bats to have a death animation?
Want a special effect when bats dash?
** I could see a streak behind the bat, like to imply a blur because the bat suddenly made a beeline for a person.
```

* Give names to the layers for Collision Layer and Mask, instead of numbers.

* Add Lobber and shots

* The gems need a slight magnetic effect, so as the player gets close to the gem, the gem moves towards the player. Once the player is within range of a gem (pretty close) the gem moves towards the player faster the closer the player is to the gem. There will later be a powerup that gives the player a magnet, which extends the range at which the gems begin to move towards the player.


* Consider how long each powerup should stay with the player. Do they time out? Or do they wear out after so many uses? Or something else??

* Define and add character property initial values such as speed, health, damage, in some sort of dictionary.

CHANGE * All Spawners (Ghost, Skeleton, SkeletonShooter, Zombie) have an Area2D from the old times. Probably remove it and retool collisions.








20250318
DONE * Implement the Nova shot, which is based on gem_power the Player has collected.

DONE * We might need Gems to be in a group other than "powerups" to differentiate them from shot powerups and health powerups.

DONE * Add powerups for player
We're going to work on adding weapon powerups for the player. Weapon powerups are stackable, meaning their effects are cumulative.
The Big Shot Powerup increases the size of the players bullet, doubles the bullets health, and doubles the bullets damage. 

DONE * Need a HUD indicator for what powerups we have.








=================================
Character Properties

Ghost
	health = 2
	base_speed = 75
	score_value = 1
	damage = 1

Skeleton
	health = 4  # Skeletons are tougher than Ghosts
	speed = 80.0  # Skeletons move slower
	score_value = 2
	damage = 2

Skeleton Shooter
	health = 4  # Skeletons are tougher than Ghosts
	speed = 80.0  # Skeletons move slower
	score_value = 4
	damage = 2

Zombie
	health = 8  # Zombies have higher health
	base_speed = 40.0  # Zombies are slower
	score_value = 4
	damage = 4  # Zombies deal high melee damage



## Animations
* Need animated player sprite

* Need animated ghost sprite

* Need animated skeleton sprite

* Need animated zombie sprite








202250317
DONE * I think we have bullets working right now. We are not using Area2D hitbox in the Player or Enemies now. That was to allow for a separate melee hitbox different from movement collisions, but that is not something I want in this game. For instance, we could have a hitbox for the head and a different one for the body. Not needed.

DONE * Now we have the problem again where the enemies all run over the top of each other.
** Enemies just needed their layer specified in Collision > Mask

DONE * Are all enemies awarding score when destroyed?
** fixed by having take_damage only in BaseEnemy, and init score_value in _ready

DONE * Also, the skeleton movement isn't really working the way I want. I asked ChatGPT about that, also.
** Okay, what we have now is sort of better, but not shippable.

DONE * I think player bullets are only hitting with "1" hard-coded amount of damage.
** Now in Bullet.gd, uses damage and stuff

DONE * What is limit of total player shots?

DONE * Implement gems being dropped by enemies upon death.
** Gems are dropped for "lifespan," and they blink halfway through, before disappearing. Player can collect gems, and HUD is updated correctly.









20250316
TEST * Yesterday asked ChatGPT about the 4 enemy character scripts, optimizations. Answer is waiting for me.

20250315
DONE * Are skeletons able to damage player with melee??

DONE * I think Ghost.gd has a lot of logic that could go in BaseEnemy.gd??

DONE * Need to make sure player is damaging ghost enemies during melee.

DONE * Fix Enemy with high health; during melee; getting stuck on player.








20250314
DONE * I would like to keep enemies from running over the top of each other.
** This works for Ghosts and Zombies, who use dumb movement, but not for Skeletons. Still working on it.
** "jitter" doesn't really seem to happen at all?
** Solution seemed to be making the collision shapes larger to fit the sprites more appropriately.








20250313
DONE * Add Skeleton enemy and SkeletonSpawner

DONE * Add Zombie enemy and ZombieSpawner

DONE * Add more walls into the demo room for testing.

DONE * Skeleton needs AI that lets it find player around walls.
** Using what we call "Basic Wall Avoidance" with Raycasts.

DONE * I would like to keep enemies from running over the top of each other.
** This works for Ghosts and Zombies, who use dumb movement, but not for Skeletons. Still working on it.
** "jitter" doesn't really seem to happen at all?
** Solution seemed to be making the collision shapes larger to fit the sprites more appropriately.








20250312
DONE * Implement BaseClass for enemies.
DONE * Subclass existing Ghost enemy.








20250311
DONE * Next thing to do is make bullets die when they hit walls in the room.
DONE * 2. Displaying Player Score in the GUI
DONE * Show healthbar above player
DONE * Allow more ghosts at one time.
** I set it to 15 or 25
DONE * I don't think destroying the ghost spawner actually awarded the points to the player








=========================================================
## Resources
=========================================================
* Good tilesetlayer video, including z-index so you can walk behind top of trees:
https://www.youtube.com/watch?v=43sJIWaj2Yw








=========================================================
## Layers
=========================================================
1: Player
2: Player bullet
3: Ghost (presumably most enemies)
4: Spawners
5: Walls (blockers in general?)
6: Powerups (Gems, weapon powerups, health powerups)
7: Enemy Shots (enemy_projecctile)
8: Crates







===============================================================
## Ordering / Z Index
0: I presume this is the TileMap
1: I have assigned almost everything to this Z index for now









=========================================================
Character and object properties:
=========================================================
Characters (Player, Enemies)
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.
* base_fire_rate: affects cooldown between each bullet fired from ranged weapon
* max_shots_in_level: determines how many bullets fired from the player can exist in the game level at any given time.
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.

Characters (Enemies Only)
* score_value: how much score is awarded to the player when the object is destroyed

Bullets
* lifespan: how long does the object live before automatic destruction
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.

Enemy Spawners
* spawn_interval: how frequently does the spawner attempt a roll of the dice to potentially spawn a new enemy
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* score_value: how much score is awarded to the player when the object is destroyed

Global
* max_ghosts
* max_skeletons
* max_{enemy_type}








=========================================================
== Optimizations
=========================================================
1. Using a pool of instances that is initialized at game startup, then moved off screen or whatever rather than deleted when the ghost / etc is destroyed. Idea is to save the overhead of allocating new instances. Is this helpful?

2. Something with Tile collisions. Instead of a collision box for every 64x64 tile, can we have a collision box, and stretch it into a rectangle over a long span of boxes? Is this helpful?







=========================================================
== 20250319 ChatGPT Questions
=========================================================
What’s Next?
Since you’re refining and adding features, do you have any particular areas where you need guidance or improvements? Here are a few potential areas of focus:

1. Enemy AI Enhancements
The enemies have a good foundation, but do you want to improve pathfinding, dodging behavior, or introduce more complex attack patterns?

Skeleton Shooters already sidestep after firing, but what about smarter decision-making (e.g., moving to cover or leading shots)?

2. Player Feedback & Game Feel
The game already has great mechanics, but how about improving hit effects? Adding:

Screen shake when the player takes damage.

Flash effects on enemies when they get hit.

Sound cues for different enemy types.

Nova Shot’s expansion speed and health mechanics are interesting—would you like a more dynamic animation to accompany it?

3. Difficulty Scaling & Balance
Your design document mentions enemy health scaling after level loops. Do you want enemies to scale gradually over time or in distinct waves?

Should power-ups be time-limited, or should there be a way to stack/degrade them over time?

4. Level & Spawner Design
Right now, spawners are timed and limited in count, but do you want enemies to spawn based on player position, score, or progression?

Maybe add boss waves or special enemy types that trigger under specific conditions?

5. Performance Optimizations
The bullet system looks clean, but does it need object pooling for efficiency?

Would you like collision layers tweaked for performance?

The raycast-based enemy line-of-sight checks are good, but are they causing any performance bottlenecks?
