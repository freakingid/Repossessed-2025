20250429
========================================
=====
BUG * Carried Crate goes right through Static crate, and so does the Player.

=====
BUG * Carried Crate does not auto vault the Player when running into a Wall.

DONE * Crates being carried by Player do not collide with wall and block movement of player and Crate. Desired behavior when carried crate hits wall would be to attempt automatically vaulting, and cancel that vault if the player would land on top of a solid obstacle like a Wall, Crate, Spawner. Note, consider this bug might be something to do with Player > move_collider_large, because I don't think we ever made it larger. The thing is, move_collider_large is going to need to effectively rotate with the player and Crate when a crate is being carried, so the move_collider_large actually represents the total silhouette of Player + Crate. Please advise and guide me.
** Working on this.
** Collision shape works for up, down, left, right. Does not work right now for the diagonals.
** Then we need to address that auto-vaulting is not happening, even though the straight-on collision shapes are working (liek Right, for example)
** 4/29/2025 **
* This is working pretty well. I noticed that when traveling diagonally, the diagonal hitboxes are not activated, so the Player can run too far into the wall. This might be simple to fix.

=====
TODO * ESCape button during gameplay should pause the game. ESCape during pause should continue game. ENTER during pause should attempt to quit the game, with Yes / No confirmation dialog. Y should trigger Yes, N should trigger No.

TODO * Maybe Skeletons throw bones instead of shoot arrows. Perhaps a different enemy shoots arrows.

TODO * Maybe Skeleton bones bounce off Crates but then shortly thereafter shrink and die, like they are falling to the ground. This is more stylistic than mechanic.

TODO * There are BUG and TODO items below on other dates, I think. Bring those forward.










20250425
========================================
STORY * Today we are going to try using parenting for carried objects.

WORK * Crate Carried
** We can pick up the crate static

DONE * While carried, the Crate sprite appears on top of the Player sprite. We were handling this before in Crate_Carried.gd by checking which object was hight up on the screen in the Y direction -- Carried Crate or Player -- and changing the z-index of the Crate Carried accordingly. Can you help me do that to get the right layering of Player and Carried Crate? If the player is moving up the screen, the player sprite should draw on top of the Crate. If the player is moving down the screen, the Player sprite should draw underneath the Crate.
Here are the z-index constants I use for setting z-index on crate and barrels both in front of and behind the player. There is also a z-index for the flame that is drawn on top of a barrel sometimes.

```
const Z_CARRIED_CRATE_BEHIND          = 40
const Z_CARRIED_BARREL_BEHIND         = 40
const Z_CARRIED_BARREL_BEHIND_FLAME   = 50
const Z_CRATES                        = 55
const Z_BARRELS                       = 55
const Z_BARRELS_FLAME                 = 56
const Z_PLAYER                        = 60
const Z_CARRIED_BARREL_IN_FRONT       = 80
const Z_CARRIED_CRATE_IN_FRONT        = 80
const Z_CARRIED_BARREL_IN_FRONT_FLAME = 90
```

DONE * Difficult for Player to drop Crate, because they pick it right back up again. Perhaps they need to drop it further away so 
** Fixed by adjusting collisionshape2d sizes

DONE * When Crate is dropped, we cannot see it, but we can pick it up again if we run into where it should be. Player shots also bounce off the invisible Crate that we Dropped. So, it seems like it is there, but we just cannot see it for some reason.

DONE * Manual vaulting behavior, started by Player running while carrying crate and then pressing a fire button to initiate vault, results in an error. Error is:

DONE * Crate_Static.reactivate() needs to use collision mask and layer constants instead of literals.








20250424
==========================================
DONE * Add title screen music back.

DONE * Added screens:
Title
> Menu
> > New Game
> > Options
> > Quit
** We are also saving config changes to a file that is automatically loaded for the SoundManager.

4/24/2025
===========================
STORY * Menu dialog changes
===========================
NOTE: Think this out below, the stuff about ESCape and pausing the game and all that. What you read right now is not correct.

TODO * Move "Quit" button to TitleScreen scene.

TODO * Pressing "ESCape" button on TitleScreen is the same as hitting the "Quit" button, which should still display the "Confirmation" like it does now on MenuScreen.

TODO * Pressing ESCape during gameplay should:
1. Pause the game.
2. Display an "Options" button that takes us to "Options" scene.
3. Display a "Quit to Title" button that initially gives us a "Confirmation" yes / no dialog. If player selects "Yes," the game is ended and the program returns us to the Title screen. If player selects "No," 
TODO * Pressing ESCape during gameplay should:
1. Pause the game.
2. Show the "Menu" screen.
2a. That allows the player to change options if needed.
2b. That allows the player to Quit if needed.
2c. If player chooses to return to Title scene, that 
3. Menu screen should have a new button "Back to Game" that, if pressed, returns us to the game scene and unpauses the game.



TESTING
=====
* Player can fire
Y shots hit and harm enemies
Y hit and harm spawners
Y bounce off crates
Y hit and damage barrels

* Player can pick up crates
Y carry crates
Y set crates down when standing
Y vault over crates when running

* Crates autovault
Y when hitting wall
Y autovault when hitting another crate
N cancel autovault when landing collided

* Carried crates pushing
Y push single enemy
Y Push multiple enemies
N Push single barrel
N Push multiple barrels

* Carried barrels
Y Player can pick up barrel?
Y can carry barrel
Y can set down standing still
Y can kick forward running
N can collide barrel with wall
N can collide barrel with crate
N can collide barrel with another barrel

TEST * Some enemies die right as they come out of the Spawner. I do not think they are being hit by a Player bullet.

DONE * Error when some enemies die
** The error might be shrapnel related, because the shrapnel is already in the room when the error happens.
** We made a GemManager singleton so anyone can drop gems.

** ChatGPT gave us some optional suggestions:
<quote>
Wrap player score logic in safe PlayerUtils.add_score_to_first_player()
Keeps logic modular and reduces enemy reliance on group name resolution.

Let me know if you'd like me to help break this into testable helper functions or extend this cleanup to other lifecycle methods like take_damage().
</quote>

BUG * Carried barrel moves right through Crate static

BUG * Carried barrel moves right through Barrel Static

BUG * Carried barrel moves right through Wall

BUG * Barrel Rolled moves right through Player

BUG * Carried Crate should "push" Barrel Static.
** I think Barrel Static should be turned into a Barrel Rolled, essentially.
?? Can Player throw a carried barrel? would be similar.

BUG * Crate autovaulting doesn't cancel when player would land on another Crate.
** Works fine when trying to vault into a long wall.
** If a crate is on the other side of a wall, and we try to autovault into the wall, i would expect autovault to cancel, so we don't land on the crate that is sitting on the other side of the wall. This used to happen in a different build, but no longer cancels.

TODO * Carried Crate pushing enemies, especially multiple enemies, can look jerky. Enemies can pop from their current location to a new location drastically. I would like to smooth this out somehow. Rather than popping to a location, perhaps they are shoved aside in some way?








20250420
======================================================
== Non-physics refactor
======================================================
* Trying to refactor without using Godot physics. Prior to this, we have used a hybrid approach where some movement was physics engine, some was direct. We are going to try *no* use of physics engine. This is because too many things are not working the way we want, usually based on limitations to move_and_slide with collisions. For example, trying to get a Crate Carried to push a Barrel Static and a Barrel Rolled correctly.

=====
TODO * Crate Vaulting
DONE * Player manual vaulting over Crate Carried.
DONE * Player auto vaulting over Crate Carried that hits Wall or Spawner or Crate Static.
BUG * Player vaulting not cancelled when landing spot would result in collision with Wall, Static Crate, Spawner.
** Desired behavior: Player vaulting cancelling when vaulting would land Player on Wall, Spawner or Crate Static, or maybe Barrel Static.
** Note: I did see a vault cancelled debug message while testing something else.

=====
TODO * Barrel Pushing
TEST * Crate Carried pushes Barrel Static, essentially turning it into Barrel Rolled?
** Note: let CGPT choose whether it actually turns into Barrel Rolled or not.
TEST * Crate Carried pushes Barrel Rolled.

=====
DONE * Convert Arrow
BUG * Arrow pushes a Barrel_Rolled along

TODO * Convert Shrapnel
** Like we did with Bullet and Arrow

=====
TODO * Crate Pushing single and multiple enemies
IMPROVE * Crate Carried pushes Enemies, whether 1 or several in a row.
** Crate pushes single enemy, but sometimes enemy can 'pop' from one spot to another, when player rotates a corner into the enemy.
** Crate pushes multiple enemies quite nicely. There is still some popping around, though.

=====
DONE * Convert Bullet.
DONE ** Enemies not getting damaged?
DONE ** bullets not damaging spawners
DONE * Bullets not damaging skeletons
DONE * Bullets not damaging Barrels

=====
TODO * Allow Skeleton Shooters to fire at player even when blocked by Crates or Barrels of different kinds. Continue to not fire if blocked by a Wall.

TODO * Arrows should bounce off Crates???

TODO * Arrows should damage Barrels.

TODO * Arrows should be object pooled.

TODO * Bullets should be object pooled.


=====
TEST * Barrel_Rolled
TODO * options
<quote>
Let me know if you'd like to visualize the friction effect (e.g. sparks, skid marks)
</quote>

update crate carried

BUG * Skeletons are not taking damage


TODO * Barrel-related enhancements
<quote cgpt>
✅ Bonus Next Steps (optional)
1. Add flashing visual when damaged
2. Add screen shake when exploding
3. Spawn shrapnel projectiles outwards
4. Integrate with HitEffectUtils for enemy-style FX
5. Tune bounce feel or visuals
</quote>

change barrel static to characterbody2d

TODO * For Sound Effects for FX hitting enemy:
<quote>
🔊 (Optional for Later) Sound Handling
You could:
Add an AudioStreamPlayer2D to the effect scene (EnemyHitEffect.tscn)
OR create a SoundManager.gd singleton with a play() method to trigger hit sounds
Let me know if you want help building that next.
</quote>

TODO * Build a Gem Spawn Manager
** Gems are spawned from killed enemies.
CGPT says:
<quote>
Wants to build a gem spawn manager for Repossessed later. The manager will handle spawning gem drops from enemies and potentially other sources, providing a reliable parent node and centralized logic instead of relying on get_tree().current_scene or get_parent(). This is to avoid errors during scene transitions or early deaths, and to support future pooling, animation, or pickup logic.
</quote>







20250416
=====
DONE * When Player picks up Barrel_Static, it looks like Barrel_Carried is initially visible right in the middle of the room, and is then moved to the proper position in front of the Player. Proper behavior would not show the Barrel_Carried until it is in the proper position in front of the Player.

DONE * Barrel_Carried correctly shows flame animation that represents status of "health" property. Barrel_Rolled does, as well. However, when Barrel_Rolled stops moving, it turns back into a Barrel_Static. While that is correct behavior, the Barrel_Static no longer displays the flame animation. Instead, it shows one frame of the animation, not playing.

DONE * If Player is able to run into Barrel_Rolled, Barrel_Rolled gets pushed by the player and never slows down enough to become a Barrel_Static until Player stops colliding with Barrel. I was going to consider this a bug, but actually it seems to make sense. I do want Barrel_Rolled to turn into Barrel_Static sooner. I think we are waiting for velocity to be 0, but that means the Barrel_Rolled can be imperceptibly moving, interpreted by the player as a Barrel_Static, when it actually is not. Help me turn Barrel_Rolled into Barrel_Static earlier, so when it seems visually to be done moving, it really is a Barrel_Static. (Incidentally, I wish Barrel_Carried and Crate_Carried would push Enemies the way the Player is pushing Barrel_Rolled in this situation. Can you remember this? Perhaps if we look at how Player is pushing Barrel_Rolled, we can use similar logic later to improve how Crate_Carried and Barrel_Carried push Enemies.)
** Note, this isn't to my liking yet

DONE * When Player's node PickupDetector (Area2D with a CollisionShape2D) collides with a Barrel_Static, a number of things happen to turn that Barrel_Static into a Barrel_Carried. Then, Barrel_Carried location is kept in sync with Player in this snippet from Barrel_Carried._physics_process():
```
func _physics_process(_delta):
	if not player:
		return

	# Position barrel slightly in front of the player
	var offset = player.last_move_direction.normalized() * 10
	global_position = player.global_position + offset
```
The problem is, visually this is awkward, because there is a distance between where Barrel_Static's pickup position and where Barrel_Carried is placed relative to the player. This causes the Barrel to "snap in place" visually when it transforms from Barrel_Static to Barrel_Carried. I would like the Barrel_Carried to visually start out in the same location as the Barrel_Static. I thought I might make the Player > PickupDetector smaller to facilitate this, but I want to ask what you think.
** Solved by making the PickupDetector smaller and placing it near the Player's sprite's hands.

DONE * Fix up some z-index layering for Player, Crate, Barrels, giving some room in-between for additions.

==============================
Crate_Static
YES 1. Can Player pick up? YES
YES 2. Do Player shots bounce off? YES
YES 3. Do Enemies have to go around? YES
YES 4. Do Enemy shots bounce off?

==============================
Crate_Carried
YES 1. Does Crate get carried in front of player correctly? YES
YES 2. Can idle Player set down Crate? YES
YES 3. Can running Player vault over Crate manually via fire button? YES
YES 4. Does running Player vault over Wall, Spawner, and other Crate automatically upon run-in? YES
=====
BUG 5. Is player prevented from vaulting if they would land on something solid? NO
YES 6. Does Crate pickup look smooth (in terms of snapping to player carrying position.) YES
=====
FIX 7. Does idle Crate set down look smooth? NO
** Set the Crate closer to the player
=====
BUG 8. Do Enemy shots bounce off?
** That's hard to say, because Skeletons (correctly) only fire at player when they have line of sight. It could still be possible for them to hit a Crate, but difficult to test. Maybe try running away from a skeleton, with a crate, then jump over it?
** Okay, I tested by running away from a SkeletonShooter while I was carrying a crate, then I vaulted over the crate as soon as the SS shot an arrow. The arrow just died upon impact with the crate, instead of bouncing off.
** But IS that a bug? We might want other shots to bounce off, but an arrow... wouldn't really bounce off.

==============================
Barrel Static
YES 1. Can player pick up?
YES 2. Do player shots damage barrel?
YES 3. Does barrel show flames?
YES 4. Does barrel die and spawn shrapnel?
YES 5. Do enemies have to go around?
=====
BUG 6. Do enemy shots damage barrel?
** SS Arrows go right through the Barrel no effect.
YES 7. Does barrel pick up look smooth?

==============================
Barrel Carried
1. Does Barrel get carried in front of player correctly?
2. Can idle Player set down Barrel?
3. Does barrel set down look smooth?
4. Can running player kick Barrel forward (into Barrel Rolled?)
5. Does barrel carried keep damage / flames from Barrel Static?
6. Does Barrel Carried push enemies otu of the way?
7. Does Barrel Carried collide and stop with Wall?
8. With Crate?
9. With Spwner?

==============================
Barrel Rolled
1. Does Barrel Rolled keep damage / flames from Barrel Carried?
2. Does Barrel Rolled bounce off of walls?
3. Does Barrel Rolled bounce off of Crates?
4. Bounce off of Spawners?
5. Bounce off of Barrel_Static, and cause them to move a bit?
6. Does Barrel Rolled eventually turn into Barrel Static?
7. Does Barrel Rolled give Barrel Static proper damage / flames?
8. Does Barrel Rolled push enemies out of the way?




BUG * Barrel_Carried can pass right through a Crate_Static, and so can the Player who is holding the Barrel_Carried
** There is talk in cgpt about move_and_slide stuff?

BUG_LATER * If Player approaches Crate or Barrel from the top, possibly attempting to pick up, the player overlaps the Crate or Barrel for a few pixels before picking the item up and correcting the z-index.
** Is this one of those cases where you have 2 sprites for 1 object, such as Crate or Barrel, and the top half is higher z-index than Player, and the bottom half is lower z-index than Player? If so, I will table this until Later.

BUG_WAIT * Crate_Static seems to have a flame, but when I pick it up and it becomes Crate_Carred (or subsequently Crate_Rolled) it does not have a flame.
** Check debug for actual health value.
** note: I cannot reproduce this right now.




NOTE * Player Push of Barrels might be good for Barrel Carried / Crate Carried push of Enemies
<quote>
📌 Follow-Up: Player push logic = good future model
Yes — you're spot-on that this "soft pushing" behavior between Player and Barrel_Rolled gives us:
* A natural-feeling push without forcibly setting position
* Room for chain-pushing (Player → Barrel → other objects)

We'll revisit this for:
* Crate_Carried pushing enemies
* Barrel_Carried pushing enemies

Likely using move_and_collide() + apply_impulse() or velocity += push_vector.

Let me know if you'd like help implementing the threshold logic right now, or reviewing your current Barrel_Rolled._physics_process() so I can give you a drop-in fix.
</quote>


?? Can Player pick up Barrel and walk normally?

?? Does Barrel stop / collide with Walls?

?? Can Player throw Barrel?

?? Does Barrel_Rolled behave as expected?
??? Slow as it rolls?
??? Bounce off walls?
??? Bounce off crates?
??? Bounce off Spawners?

?? Does Barrel_Rolled turn into Barrel_Static successfully upon stopping?







20250415
=====
DONE * If Player is carrying a Crate_Carried, and pushes the Crate_Carried into a crowd of Enemies, the Crate_Carried should push the Enemies back. Another option is the Enemies jump back away from the Crate_Carried. The main requirement is that the Enemies are essentially pushed by the Crate_Carried, and the Player and Crate_Carried stay in sync regarding their positions. Currently, the Crate_Carried ends up blocked by the Enemy, stops moving, and the Player will continue to move right through the Crate. Let me know what you think I want the behavior to be, and your description of what is happening now.
** chatgpt quote:
<quote>
🧪 Optional: Add Push Cooldown (To Avoid Flicker)
If you see jittery or repeated pushing, we can add a cooldown timer or state (like was_recently_pushed) to each enemy. Let me know if you want to add that too.
</quote>

DONE * Some enemies, if they make contact directly with the player, seem to stick to the player wherever the player moves after that, like the Enemy's speed or position are now tied directly in sync with the player -- even though the Enemy's actual speed property is lower than that of the Player. The whole time this is happening, the Enemy is usually dealing melee damage to the player. Sometimes the Player can "brush off" the enmey by walking around a Wall corner close enough that the Enemy gets blocked by the Wall. Expected behavior is, the Player should be able to walk away from an Enemy whose speed property is lower than the Player's speed property.

DONE * When player is carrying a Crate_Carried while running, then presses a firing direction input to manually initiate vaulting over the crate, the crate is being dropped several pixels far in front of the Player. That is okay for simply dropping the crate while standing still, but I do not want the Crate to be dropped so far in front if we are going to vault over it. Ideally, I want the Crate to be dropped right where it was when we initiated the drop and vault.

DONE * Vaulting will play an appropriate sound effect during the vault. Stub this in.

DONE * If we vault over an enemy, then once the vault is over we would like to play a taunting sound, such as the Player saying "Ha Ha". Stub this in.

DONE * Make a title screen with image
I have a PNG image I would like to use for a simple splash / title screen that displays when the game first starts up. 1536px x 1024px. I simply want to display the image for now. Later we will also play a title music track when the screen is shown, so you could stub that in. If the player clicks the mouse button on the screen, or hits the "Enter" button while the screen is up, we will move to start the game. For now, we will simply go to the first level. Later, we will go into a window where we can choose from "Options," "New Game," "Load Game," "Quit Game," and "Credits," and maybe some other things. Please describe what you think I want to do, suggest anything you think would make this better for the player, and then ask me if I want to go forward before you tell me step-by-step how to implement the splash screen.

=====
TODO * Add Barrel_Static, Barrel_Carried, Barrel_Rolled

BUG * Ghosts can walk right through Barrel_Static. They should be blocked by Barrel_Static, similar to how they are blocked by Crate_Static.

BUG * Ghosts can walk right through Barrel_Carried. They should be blocked and pushed by Barrel_Carried, similar to how they are pushed by Crate_Carried.

** Note: Ghosts do NOT walk through Barrel_Rolled, which is expected behavior.

BUG * Barrel_Carried does not collide with wall and prevent movement. The barrel simply overlaps the wall, and then Player does collide / stop with the wall.

BUG * Shrapnel collides with wall but doesn't bounce away much, which looks really odd.

BUG * Nova should only be able to be fired once, and then a cooldown that happens after the first nova has completely finished

==========
TODO * We talked about making Nova behavior change:
a. Push enemies away, but not damaging them
b. Destroying ememy bullets
c. Not sure about Shrapnel, probably push?
d. Get this into the design document

TODO * Pool Player Bullets

TODO * Pool Enemy Arrows

BUG * Skeleton Enemy can get stuck in corners

BUG * SkeletonShooter movement behavior needs refined a bit. They stop movement at odd times.

BUG * When player died, it seems like the camera made a huge shift down to the lower-right corner of the level.

TODO * Include screen shake upon barrel explosion.
TODO * Check behavior of multiple barrels colliding and pushing each other.

TODO * How do we create multiple rooms in our game?
a. Player properties such as score, health, current powerups, etcetera should all carry over between levels.
b. Eventually, we will want the status of levels to be saved, so if the player reenters those levels later, they will contain the same objects, enemies, and so forth, in the same conditions as they were when the player last left the room.
c. We will use a simple door node / sprite to move from one level to the next.

TODO * Player animation and Carried Crate need updated to show better animation of Player carrying Crate

TODO * I think the Big Shot powerup is not actually altering the size of the Shot, so we cannot actually see that we have the big shot.










=====================================
20250411
Updated to 4/13/2025 and 4/14/2025
=====
NOTE * I was working with jumping over the walls and running into some issues. One potential problem was that the middle section of the wall was not a collision tile, so if you could somehow get in the middle of the wall, it was a legitimate place to be. I put an odd looking brick that is a collision tile down the middle of these walls just for position only. 

DONE * Player can use vaulting to accidentally land outside the room. We need to prevent the Player from going outside the room bounds, whether it is from vaulting or any other means.
** Now we are checking room bounds when deciding whether or not to allow vaulting.
** We could optionally check room bounds at other times, but I thought it was too much and unnecessary to do in every single frame.
** There was a complicating factor in that I am scaling the TileMapLayer down by 0.25. So we had to figure that math in.

DONE * ask chatgpt to render an image of the player using a crate to being vaulting over a wall, using the same art style as the other image

DONE * ask chatgpt to render an image of the player using a crate to being vaulting over a wall, using the same art style as the other image

DONE * Find the image cgpt rendered of all the enemies.

DONE * If player is carrying a Crate_Carried, but is not moving, and presses a fire button, we should just be dropping the Crate in front of the Player. Currently, the Player is trying to vault over the Crate in this situation. They should only try vaulting if they are Carrying the Crate_Carried and hit fire, or run into a wall.

DONE * If player carrying Crate_Carried runs the Crate_Carried into a Crate_Static or Enemy Spawner, the Crate_Carried should be blocked from movement (as it is now) but should also prevent the Player from any further movement. Right now, the Player will continue moving, right into the Crate_Carried.
** note: We might have handled this similarly already when a Crate_Carried runs into a Wall.
** Fix note: This accidentally got fixed in a way that we would try to Vault Over the Crate_Static that is blocking the Crate_Carried and its Player. I really like this!!

DONE * If player runs into an Enemy Spawner while carrying a Crate_Carried, the Crate is properly blocked, but the Player continues on. This is similar to running into a Crate_Static. Also similar to running into a Wall, which I think we have already handled, and should give insight to an easy fix.

DONE * Make the Player appear on a layer above the Wall when vaulting.
** Maybe use LAYER_FLYING_ENEMY??
** I tried that, but it didn't work.
** Actual problem was debug showing of collision shapes

DONE * If player begins vaulting because they were running with a crate and set it down, the vault might land them in the middle of some obstacle, such as a wall or enemy spawner.
** This works now to not land into a wall. We simply cancel the vaulting, and bump the player back a bit, and I think we stubbed in some sound effect or at least left a comment.

DONE * Vaulting feedback: If vault is cancelled, Player should vibrate and the Crate_Carried should flash in some way.

DONE * Landed vaulting feedback: Show player sprite squish down and also slide a few pixels forward after landing the vault.

DONE * Make the Player do that same vaulting behavior when they simply drop a crate while they are running. This would allow them to jump over anything like an enemy or a barrel or whatever.
** This seems to be working at the moment. Test it a ton. We can land in the middle of some enemies, but that's not a bug.
** What if we land on another Crate? Or a Barrel?

DONE * If player begins vaulting because they were runnign with a crate and set it down, the player is still colliding with enemies rather than jumping over them. We probably need to make changes to collision layer during the vault to allow ignoring enemy collisions during that time??

DONE * Make Player sprite rotate toward the direction of the jump if it is left or right.

DONE * Vaulting player sprite looks like it is blending with the wall. Should appear on top of the wall layer.
** This was just the debug shapes being drawn in test.

DONE * If Player uses movement input while vaulting over a wall, it registers as trying to pick up the Crate_Static that was just dropped by the wall, causing another Crate Carried and then immediately a Crate Static, which is buried inside the wall after that. We need player input to not matter during the vault. We could accept some "Coyote Time" firing input so once the player lands they would fire their weapon immediately, *if* they had tried to fire while vaulting over the wall.
** Still not ignoring movement, and now we also do not get the stopped crate at the wall until the player lands on the other side, so technically this is worse.

DONE * When dropping a crate while moving down (south) or down and to the left (southwest), the player drops the crate to their upper left (northwest). Expected behavior is to drop the crate in front of the player, in the direction of travel. For example, if the player is moving down, the crate should be dropped further down, which allows the moving player to "jump over" the crate.

DONE * Player bullets are not bouncing off of Crate_Static. They appear to behave just like hitting a wall, where they simple die.

DONE * Crate_Carried does not collide with wall and prevent movement. The crate simply overlaps the wall, and then Player does collide / stop with the wall.

DONE * Make Player drop Crate_Carried upon hitting wall, then jump over the Crate and the Wall.
** We're going to manually set Global.CRATE_SIZE to the size of the Crate sprite. But it sure would be nice to set that automatically later.

DONE * Make Crate Vaulting happen visually more slowly
** Just change the vault_duration at top of Player.gd! Magic

DONE * Bullet gets error about hitbox








=================
20250410

DONE * Fixed and refactored some issues with Bat Enemy.

DONE * Spawners fix error and add despawn signal with data to log

DONE * Spawners cannot be shot with Player Bullet.
** Note, we put the root Spawner nodes into "damageable" group and I'm not sure that's correct. YES it is correct.

DONE * All enemies can be placed in the scene without error and pursue player, and SkeletonShooter fires arrows. Current enemies are:
Ghost, Skeleton, SkeletonShooter, Zombie, Bat
** All enemies can be shot by the Player Bullet, also, and they die, and spawn gems based on their power.

DONE * Spawners for Ghost, Skeleton, SkeletonShooter, Zombie, and Bat are wired up with Object Pooling. We are using Constants from Global.gd to set both the maximum number of each enemy type (in BaseSpawner) and the number of objects put into the pool (in LevelManager)

DONE * Add SkeletonSpawner and Skeleton with Pooling

=====
<quote>
Would you like help with:
NavigationAgent2D integration?
Refactoring Skeleton’s spawner scene?
Adding custom pathing like obstacle avoidance or side-stepping?
</quote>

💥 Adding death animations or hit flash visuals
🎯 Setting up spawn waves, limits, or conditional triggers

<quote>
🔭 Here are some good next steps, depending on your goals:

🧠 2. Add visual feedback to BaseEnemy
* Flash red on hit (modulate)
* Spawn particles or blood splats

🧪 3. Set up a DebugSpawner scene
* Spawn any enemy on demand with a hotkey
* Great for testing AI, pooling, or combat balance
* Nice to have during iteration or level design.

🧰 4. Create a "ReusableEnemySpawner" prefab
* A fully wired-up spawner scene that can be dropped anywhere
* Inspector config only (no custom scripts needed)

Good if level design is picking up and you want less wiring overhead.

=====
If you'd like to keep momentum, next great steps could include:
🔁 Converting another enemy (e.g. Skeleton) to the pooling system
💥 Adding death animations or hit flash visuals
🎯 Setting up spawn waves, limits, or conditional triggers
🛠️ Auto-adding enemies to groups based on is_flying (or other traits)








========================================
20250409
** Today we are doing a bunch of "Refactoring" because that seems to be what ChatGPT tries to do whenever I enter a new chat and try to preserve context. It all sounds useful, but some things might have been stripped out when cgpt was trying to update the wrong Canvas documents, just FYI.

DONE * Arrows sometimes launch with a spint

DONE * Arrows collide with walls and then do the weird vibration bounce

DONE * Move to a new ChatGPT window

WORKING * Add Enemy Spawners for Ghost, Skeleton, SkeletonShooter
** Currently, they all derive from base class "BaseSpawner.gd"
** GhostSpawner, SkeletonSpawner, SkeletonShooterSpawner
** We added stuff for object pooling

DONE * Add Ghost Spawner and Ghost, with Pooling








=============================================
20250408
DONE * Ghost is not doing any melee damage when touching Player

DONE * Player cannot actually shoot any bullets.

DONE * Add Skeletons to the game and test.
** This still needs improved, because Skeletons can get stuck on corners sometimes, but we are going to move on.

DONE b. Random velocity for Ghosts to spread out. I think this is different than random speed?








=================================================
20250407
* Working on a refactor.

TEST * Step 3: Refactor bullet logic (next session)
Start rewriting Bullet.gd and Arrow.gd using the new architecture?

DONE * Enemy Base
** We say done here, but it may be ongoing as we work on other enemies.

WORK * Ghost

More ChatGPT Ghost movement ideas:
---

### 🅱 Use separation logic (like boids/steering)
If you want smarter avoidance between enemies, you can:
- Detect nearby enemies using `get_overlapping_bodies()`
- Calculate repulsion force or steering angle away from them
- Combine that with the direction toward the player

More complex, but more fluid.

---

### ✅ Recommendation
Start with Option 🅰 and see if that feels good. It's easy and often enough.

Would you like me to patch that random offset version into `BaseEnemy.gd` for `move_directly_to_player()` in the Canvas doc?
</quote>








========================================
20250402
DONE * I did not see the explosion. Maybe a z_index issue? Or something else
** This was a z_index issue.
DONE * Shrapnel is spawned, but it is spawned over and over.
** The ShrapnelTimer did not have "one_shot" flag set.
DONE * Shrapnel seems to have gravity and fall towards the bottom of the screen.








===================================================
20250401

DONE * Show flames on barrels at various levels of damage and make sure health / flame crosses over when barrels transition to different types of barrels. Damage levels should be as follows:
100% to 90% health = no flames
90% to 70% = small red flames
70% to 50% = medium red flames
50% to 30% = large yellow flames
30% to 0% = huge white-yellow flames

DONE * When Barrel_Carried is kicked and becomes Barrel_Rolled, it takes a bit too long to turn back into Barrel_Static. One problem with this is that while it is Barrel_Rolled, it might appear to be standing still, but it has not yet turned back into Barrel_Static, so when the player tries to pick it up, the Barrel is kicked again instead. I just removed the "amount of time the barrel should roll," because I want us to just pay attention to when the Barrel Roll is almost done moving.
Then we increased the linear_velocity.length_squared() check so if we're moving < 8 speed we are considered to be stopped.

DONE * Check Enemy arrows against walls, crates, barrels
DONE * Enemy Arrows pass right through Barrel_Static
** Needed the layer_barrel added to Collision Layer
DONE * Enemy Arrows pass right through Barrel_Carried, damage the Player who is carring the Barrel_Carried, but then oddly the arrows ricochet off of that Player. Normally, the arrows should exchange damage with the Player and then either be removed (if Arrow health is < 1) or continue on straight.
** Needed the layer_barrel added to Collision Layer
DONE * Enemy Arrows transfer momentum to Barrel_Rolled, but they should not. Arrows are not supposed to have enough mass to cause a change in velocity to a Barrel.
** We needed to disable physics collisions between Barrel_Rolled and Arrow. This seems like a nasty hack since it requires every new arrow to tell every existing Barrel_Rolled to ignore that new Arrow. It works for now.

========================================================
== NOTES On Barrel and Crate Pickups
=========================================================
# Picking up a Crate or Barrel
Player _on_PickupDetector_body_entered
* Make sure we are not carrying a barrel or a crate already.
* Make sure drop cooldown timer has passed
* Get instance to the item to be picked up
* Call "pickup(self::Player)" on the item to be picked up (Crate Static or Barrel Static)

Barrel_Static pickup(player)
* Become invisible and deactivate physics, for Static
* Get instance to the Barrel Carried
* Setup flame and health on that instance
* we're good

Player _physics_process
* Handles input, firing input checks for carried objects, calls drop_crate() or drop_barrel() if needed.
* drop_barrel():
** Decides if we should drop or place barrel, based on player's velocity.

DONE * Seems like maybe health is not getting transferred all the time when switching barrel types.

DONE * Yes, bullets are being fired when releasing a Barrel Carried, and we do not want that.
** Setting timer to make bullets wait isn't working. Could troubleshoot that but it makes more sense to tell the Barrel to not care about bullet collisions for a short period of time with a Timer when the Barrel Static or Barrel Rolled is first instantiated.

DONE * Why do the barrels start out with flames already??









==================================================
20250331
DONE * Barrel Carried does not have all the properties and such we need for taking damage, etc.

DONE * Player bullets with Bounce powerup do not properly bounce off of walls. They make contact with the wall and then do that funky vibrating thing, moving chaotically from side to side along the length of the wall, until the bullet's lifespan has expired and the bullet is destroyed.








20250328
DONE * Add barrels
** Barrel next steps, according to ChatGPT:
✅ Next steps
Let me know if you want to:

* Start building the Barrel_Static.tscn and Barrel_Carried.tscn
* Implement the Barrel_Rolled physics-based drop and motion
* Define the Shrapnel scene and damage logic
* Set up the flame health indicator overlay
* Create the signal/event pipeline for explode()
**

DONE * rolling barrels hit by bullets are pushed along by the bullets. Bullets should not add to motion of barrels, because bullets have so little mass.
** The rolling barrels are also too bouncy off other things. bouncing can sometimes even increase speed.

DONE * we made some changes to Bullets so they would not move Barrel_Rolled when hit. However, now the bullets stick to the side of Crate_Static -- and old problem we recently fixed.

DONE * Barrel_Static is not getting collisions with Player Bullets.
** and lets test for others.

DONE * pickup, carry, and drop barrels

DONE * make dropped barrels roll

DONE * when player is moving down, kicking barrel sends it to the left









20250327
DONE * Use globals, maybe some sort of dictionary, for object properties that need leveling
** These are in Global.gd. which is autoloaded for the project.

DONE * Nova Shot does not harm Bat

DONE * Make Crate larger

DONE * Fix Crate_Carried draw order with player directions.
** Z-index set in code correctly, but the Player had z_index set to 10 in inspector, and zindex is set to relative, and we were changing Player > Sprite2D zindex, so things were off.

DONE * Test player carrying crate that gets hit by enemy arrows.
** Arrows bounce as expected

DONE * HUD is covered by Crate
** Assigned Player.HealthBar a z_index

DONE * Adjust Y placement of Carried Crate because now it is larger and covering the player's face.

DONE * Make player carrying crate walk a little slower.
DONE * Adding player animated sprites
DONE * Add ghost animated sprites
DONE * Add skeleton animated sprites
DONE * Add skeleton shooter animated sprites
DONE * Add zombie animated sprites
DONE * Add bat animated sprites

NOTE * Animation sprite sheet top to bottom:
1 South
2 South East

3 East
4 North East

5 North
6 South West

7 West
8 North West


=================================================
* Add More enemies
=================================================
** Bats
** ChatGPT asks:
```
Want bats to have a death animation?
Want a special effect when bats dash?
** I could see a streak behind the bat, like to imply a blur because the bat suddenly made a beeline for a person.
```

* Add Lobber and shots

* The gems need a slight magnetic effect, so as the player gets close to the gem, the gem moves towards the player. Once the player is within range of a gem (pretty close) the gem moves towards the player faster the closer the player is to the gem. There will later be a powerup that gives the player a magnet, which extends the range at which the gems begin to move towards the player.

* Consider how long each powerup should stay with the player. Do they time out? Or do they wear out after so many uses? Or something else??

==============================================
## Animations
==============================================
* Player sprite animation speed options ChatGPT mentioned for different styles.
🔁 Alternate clamp examples

### 🎮 Option 1: Smoother walk cycle for slower movement
```
sprite.speed_scale = clamp(actual_speed / max_speed, 0.75, 1.5)
```
Prevents animation from ever becoming too slow
Keeps all animation within a more natural range
Good for pixel art games that look weird when walking is too slow

### 🐢 Option 2: Emphasize slower speeds dramatically
```
sprite.speed_scale = clamp(actual_speed / max_speed, 0.2, 2.0)
```
You’ll really see when the player is slowed down (e.g., stunned or carrying something)
More exaggerated look — could match a cartoony or more expressive style

### ⚡ Option 3: Minimal variation
```
sprite.speed_scale = clamp(actual_speed / max_speed, 0.9, 1.1)
```
Animation always plays close to normal speed
Avoids visual drift while still subtly reacting to movement








20250325
DONE * Working in branch "node-type-changes" to change player bullets, enemy arrows, crates, etc. to node types that will work with physics bouncing.

DONE * See if we can make a common parent for all Spawners.

DONE * Bats are colliding with other Enemies and pushing them. They should go right over the top of all obstacles and characters when flying towards Player target.

DONE * Player Bullets are not colliding with Enemy Spawners, so they cannot be damaged or destroyed.

DONE * set collision_layer and collision_mask in "_ready()" function for objects, instead of relying only on the inspector. Use GLOBALS.[layernames] with pipe | operator.
** And cgpt asks "Let me know if you’d like help defining common mask combinations in Globals.gd too (e.g., MASK_PROJECTILE_HITBOX, MASK_CRATE_BLOCKERS, etc.)."

DONE * player cannot fire in different directions

DONE * player shots do not bounce off crate, but simply stick to the side until their lifespan expires and they remove themselves.

DONE * player shots do not damage enemy bats or enemy ghosts, but they bounce off.
** They do not bounce off, and seem to damage bats and ghosts.

DONE * Player cannot drop the crate.
** Some sort of issue with null value on crate reference when trying to drop the crate.

DONE * After picking up the crate, I can carry it. The first time I try to drop the crate, it drops a Crate_Static, but the player is still carrying the Crate_Carried. I cannot do any more crate drops after that.

DONE * While carrying a crate, the player should not fire any shots. Shot firing direction input will only be used to potentially drop the carried crate.

DONE * We told Bullet.gd not to worry about body_entered with enemies, SO we need all enemy collisions to manage this. We first did this with the Bat collisions.
** Oh, we have the same situation with on_area_entered in Bullet with enemies.
** So, we will let Enemies manage the collision with Player bullets.

BUG? * At one point while testing the bat, I noticed when the bat collided with the player, and then switched into wandering mode , it caused the player to move in sync with the wandering bat. That was weird and only happened one time. 








20250322
DONE * Adding Crates
NOTE * There are other things fro 20250319 that need moved up. I will do that after managing Crates.








20250321 (Carried over from 20250320

20250319
DONE * Resized from 128px sprites to 32px.
** Happy accident: Regular skeletons can now find their way around walls. I think the change of scale allowed their movements to scale 4x and make a difference.








DONE * Adding Skeleton Shooter
?? When skeletons are blocked by wall, should they be still trying to go towards player?
?? It seems like the skeleton is trying to shoot at the player even when there is a wall in the way. We are supposed to be testing for line of sight.
** Is wandering is only when they are FAR from the player and blocked vision

DONE * Add Bat

DONE * Give names to the layers for Collision Layer and Mask, instead of numbers.









20250318
DONE * Implement the Nova shot, which is based on gem_power the Player has collected.

DONE * We might need Gems to be in a group other than "powerups" to differentiate them from shot powerups and health powerups.

DONE * Add powerups for player
We're going to work on adding weapon powerups for the player. Weapon powerups are stackable, meaning their effects are cumulative.
The Big Shot Powerup increases the size of the players bullet, doubles the bullets health, and doubles the bullets damage. 

DONE * Need a HUD indicator for what powerups we have.








=================================
Character Properties

Ghost
	health = 2
	base_speed = 75
	score_value = 1
	damage = 1

Skeleton
	health = 4  # Skeletons are tougher than Ghosts
	speed = 80.0  # Skeletons move slower
	score_value = 2
	damage = 2

Skeleton Shooter
	health = 4  # Skeletons are tougher than Ghosts
	speed = 80.0  # Skeletons move slower
	score_value = 4
	damage = 2

Zombie
	health = 8  # Zombies have higher health
	base_speed = 40.0  # Zombies are slower
	score_value = 4
	damage = 4  # Zombies deal high melee damage








202250317
DONE * I think we have bullets working right now. We are not using Area2D hitbox in the Player or Enemies now. That was to allow for a separate melee hitbox different from movement collisions, but that is not something I want in this game. For instance, we could have a hitbox for the head and a different one for the body. Not needed.

DONE * Now we have the problem again where the enemies all run over the top of each other.
** Enemies just needed their layer specified in Collision > Mask

DONE * Are all enemies awarding score when destroyed?
** fixed by having take_damage only in BaseEnemy, and init score_value in _ready

DONE * Also, the skeleton movement isn't really working the way I want. I asked ChatGPT about that, also.
** Okay, what we have now is sort of better, but not shippable.

DONE * I think player bullets are only hitting with "1" hard-coded amount of damage.
** Now in Bullet.gd, uses damage and stuff

DONE * What is limit of total player shots?

DONE * Implement gems being dropped by enemies upon death.
** Gems are dropped for "lifespan," and they blink halfway through, before disappearing. Player can collect gems, and HUD is updated correctly.









20250316
TEST * Yesterday asked ChatGPT about the 4 enemy character scripts, optimizations. Answer is waiting for me.

20250315
DONE * Are skeletons able to damage player with melee??

DONE * I think Ghost.gd has a lot of logic that could go in BaseEnemy.gd??

DONE * Need to make sure player is damaging ghost enemies during melee.

DONE * Fix Enemy with high health; during melee; getting stuck on player.








20250314
DONE * I would like to keep enemies from running over the top of each other.
** This works for Ghosts and Zombies, who use dumb movement, but not for Skeletons. Still working on it.
** "jitter" doesn't really seem to happen at all?
** Solution seemed to be making the collision shapes larger to fit the sprites more appropriately.








20250313
DONE * Add Skeleton enemy and SkeletonSpawner

DONE * Add Zombie enemy and ZombieSpawner

DONE * Add more walls into the demo room for testing.

DONE * Skeleton needs AI that lets it find player around walls.
** Using what we call "Basic Wall Avoidance" with Raycasts.

DONE * I would like to keep enemies from running over the top of each other.
** This works for Ghosts and Zombies, who use dumb movement, but not for Skeletons. Still working on it.
** "jitter" doesn't really seem to happen at all?
** Solution seemed to be making the collision shapes larger to fit the sprites more appropriately.








20250312
DONE * Implement BaseClass for enemies.
DONE * Subclass existing Ghost enemy.








20250311
DONE * Next thing to do is make bullets die when they hit walls in the room.
DONE * 2. Displaying Player Score in the GUI
DONE * Show healthbar above player
DONE * Allow more ghosts at one time.
** I set it to 15 or 25
DONE * I don't think destroying the ghost spawner actually awarded the points to the player








=========================================================
## Resources
=========================================================
* Good tilesetlayer video, including z-index so you can walk behind top of trees:
https://www.youtube.com/watch?v=43sJIWaj2Yw








=========================================================
## Layers
=========================================================
1: Player
2: Player bullet
3: Ghost (presumably most enemies)
4: Spawners
5: Walls (blockers in general?)
6: Powerups (Gems, weapon powerups, health powerups)
7: Enemy Shots (enemy_projecctile)
8: Crates

When setting Collision Masks and Collision Layers in code, we can make it more intuitive:
```
💡 Pro Tip: Define named constants for clarity
In a global constants script or at the top of your script:
```
const LAYER_CRATE = 128
const LAYER_PLAYER = 1
```
Then use:
```
set_deferred("collision_layer", LAYER_CRATE)
```
Makes debugging and refactoring way easier later.
```
** So, we are using that, but will need later to update that for numerous objects.
```
For all dynamic objects (bullets, crates, enemies, powerups), define layers/masks in _ready() or init() to guarantee correct behavior across scenes and versions.

Let me know if you want help batch-updating those or verifying masks in a scene.
```









===============================================================
## Ordering / Z Index
0: I presume this is the TileMap
1: I have assigned almost everything to this Z index for now









=================================================================
## Collision Decisions
?? Who should manage collisions?
From a ChatGPT:
```
Option 2: Targets Handle Being Hit
"The thing that gets hit decides what to do when it's hit."
✅ Cleaner, scalable (especially for enemies that behave differently)
✅ Keeps bullet logic minimal: just notify or signal hit, then vanish
✅ Great when enemies have their own health, resistances, effects, etc.
🚫 Slightly more setup (signal wiring, or area_entered detection on enemies)
```
So, this means between a bullet and an enemy, the enemy will manage the hit, for example.








=========================================================
Character and object properties:
=========================================================
Characters (Player, Enemies)
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.
* base_fire_rate: affects cooldown between each bullet fired from ranged weapon
* max_shots_in_level: determines how many bullets fired from the player can exist in the game level at any given time.
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.

Characters (Enemies Only)
* score_value: how much score is awarded to the player when the object is destroyed

Bullets
* lifespan: how long does the object live before automatic destruction
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.

Enemy Spawners
* spawn_interval: how frequently does the spawner attempt a roll of the dice to potentially spawn a new enemy
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* score_value: how much score is awarded to the player when the object is destroyed

Global
* max_ghosts
* max_skeletons
* max_{enemy_type}








=========================================================
== Optimizations
=========================================================
1. Using a pool of instances that is initialized at game startup, then moved off screen or whatever rather than deleted when the ghost / etc is destroyed. Idea is to save the overhead of allocating new instances. Is this helpful?

2. Something with Tile collisions. Instead of a collision box for every 64x64 tile, can we have a collision box, and stretch it into a rectangle over a long span of boxes? Is this helpful?







=========================================================
== 20250319 ChatGPT Questions
=========================================================
What’s Next?
Since you’re refining and adding features, do you have any particular areas where you need guidance or improvements? Here are a few potential areas of focus:

1. Enemy AI Enhancements
The enemies have a good foundation, but do you want to improve pathfinding, dodging behavior, or introduce more complex attack patterns?

Skeleton Shooters already sidestep after firing, but what about smarter decision-making (e.g., moving to cover or leading shots)?

2. Player Feedback & Game Feel
The game already has great mechanics, but how about improving hit effects? Adding:

Screen shake when the player takes damage.

Flash effects on enemies when they get hit.

Sound cues for different enemy types.

Nova Shot’s expansion speed and health mechanics are interesting—would you like a more dynamic animation to accompany it?

3. Difficulty Scaling & Balance
Your design document mentions enemy health scaling after level loops. Do you want enemies to scale gradually over time or in distinct waves?

Should power-ups be time-limited, or should there be a way to stack/degrade them over time?

4. Level & Spawner Design
Right now, spawners are timed and limited in count, but do you want enemies to spawn based on player position, score, or progression?

Maybe add boss waves or special enemy types that trigger under specific conditions?

5. Performance Optimizations
The bullet system looks clean, but does it need object pooling for efficiency?

Would you like collision layers tweaked for performance?

The raycast-based enemy line-of-sight checks are good, but are they causing any performance bottlenecks?







====================================================
== Philosophy? Game Design?
====================================================
1. Make the basic gameplay mechanics:
a. Player movement, firing, powerup weapons, and overpower weapons.
b. All basic enemies (just no bosses)
c. All basic obstacles (walls)
d. All important special game pieces (crates, barrels)

2. Now, how does it feel?

3. Fix anything big time broken.

4. Maybe it is time to launch steam page with trailer?

5. Now add bigger goals like saving a princess, upgrade tokens to find for completionist, maybe there are a few other things? Careful about scope creep.

6. Make sure UI is working and good

7. Design a zillion levels

8. Make sure there is a trophy system / achievements

9. what else before launch?








===========================================================
== LATER things to consider
===========================================================
LATER * Fix Player moving down close to wall picking up crate and accidentally vaulting.
Here is the original BUG note:
---
BUG * If Static_Crate is next to wall from a previous drop, it is very close. Then if the Player is very close to the wall and comes down to collide with the Crate_Static -- making it turn into a Crate_Carried -- the vaulting routine starts even though we didn't technically run into a wall with the Crate. This probably happens because the player is close to the wall, and when we pick up the Crate_Static, it turns into Crate_Carried, and its position is shifted to be inline with the player. That shift causes the Crate_Carried to collide with the Wall. Any ideas on how to make this not happen, rather simply??

<quote>
Absolutely — here’s a clean summary you can keep for your records or drop into your GDD dev notes:

---

## 🧩 Crate Pickup Wall Collision Bug: Summary & Fix

### 🐛 **Problem**

When the Player picks up a `Crate_Static` that’s placed right next to a wall or solid object:

- The crate is converted into a `Crate_Carried`
- By default, `Crate_Carried` aligns itself to a position slightly in front of the player (via `get_offset_based_on_direction`)
- If the player is already up against a wall, this offset pushes the crate **into the wall**, triggering **an unintended vault**
- This results in a vault being triggered **immediately upon pickup**, even though the player never moved into a wall

---

### ✅ **Solution**

**Instead of moving the Crate to the Player**, we check for potential collision:

- If aligning the crate to the player would result in a collision with a wall, spawner, or static crate:
  - We **leave the crate where it is**
  - And instead, we **move the Player backward** to match the crate’s position

This prevents wall-overlaps, and therefore **prevents accidental vault triggers right after pickup**.

---

### 🔧 **How to Implement**

In `Crate_Static.gd`, inside the `pickup(player)` function:

```gdscript
var direction = (player.global_position - global_position).normalized()
var intended_crate_pos = player.global_position + direction * 15.0

var shape: Shape2D = $CollisionShape2D.shape
var space_state = get_world_2d().direct_space_state

var query = PhysicsShapeQueryParameters2D.new()
query.shape = shape
query.transform = Transform2D(0, intended_crate_pos)
query.collision_mask = Global.LAYER_WALL | Global.LAYER_SPAWNER | Global.LAYER_CRATE
query.collide_with_bodies = true

var result = space_state.intersect_shape(query, 1)

if result.size() > 0:
	# Crate would hit a wall — move player instead
	var new_player_pos = global_position - direction * 15.0
	player.global_position = new_player_pos
```

---

### 💡 Additional Notes
- No need for a grace timer or delayed vault logic
- Keeps the physics feel tight and intuitive
- Works for all directions and wall-adjacent crates
- Easily extendable to fallback directions if desired
</quote>

LATER * Additions to Crates crushing Enemies
<quote>
Crushed enemies could pop into particles
Add a bounce or recoil sound when pushing chains happen
Flash or jiggle the crate slightly when blocked
Score bonuses or combos for multi-kills via crate
</quote>

LATER * Enhancements to vault looks
<quote>
Optional Enhancements
🎨 Add a sprite trail effect that arcs while spinning
🔉 Play a vault spin “whoosh” sound only for spinning vaults
🎯 Use AnimatedSprite2D.play("spin") if you ever add a dedicated spin animation
</quote>

LATER * Pool Enemy Lobber shots, Spider webs, other things they throw

LATER * Pool Shrapnel

=====
LATER * See if we can improve the way Barrel_Rolled avoids getting momentum added by Arrow.
** We needed to disable physics collisions between Barrel_Rolled and Arrow. This seems like a nasty hack since it requires every new arrow to tell every existing Barrel_Rolled to ignore that new Arrow. It works for now.
** ChatGPT gave us an idea. I had it write a summary that we could present in a different chat at a later time to try efficient solution. That summary is "Enemy Arrows Push Rolling Barrels" in the "Repossessed 2025" folder of "Game Projects" in Google Drive.
https://docs.google.com/document/d/1KjGnxEASNrOPFPeJFELTTnXAFlhKHpkn_EUkjkWbndc/edit?usp=drive_link
** 4/14/2025 I don't know if this is still valid, as we've changed node types here and there.

=====
LATER * When Player is standing still and drops a Crate, if facing Left or Right the Crate is dropped a bit further than I would like.

<quote>
Optional Add-ons for Spawner stats building
Want to:
1. Track average lifespan per spawner?
2. Delay spawns if enemies die too quickly (anti-spawn-spam)?
3. Trigger special events based on enemy death cause?

We can build on this easily with internal metrics.

Let me know if you'd like to log enemy lifespans in a per-spawner array or roll up some real-time stats!
</quote>

=====
MAYBE * If player vaults over something but lands on top of a Crate_Static, the player should be allowed to stay on top of the Crate_Static. If there are many Crate_Static obstacles together, with gaps less than the width of one Crate, the Player should be able to run atop them all. This makes the Player immune to ground-based Enemy melee attacks. The Player is still susceptible to Enemy Arrows, Bats Melee, and Shrapnel.
** I think this should be LATER







============================================================
== Sound Effects
== SFX
============================================================
9.3 Initial Sound Effect Needs and Starter Soundry Prompts
Based on Repossessed's current design systems, the following is a recommended starting list of sound effects needed, along with sample prompts for Soundry AI or manual creation:

Player Sounds
Footsteps (tile/stone floor):
"Retro arcade stone floor footsteps, cartoon-style, short crisp tap, 16-bit texture"

Vault Landing Puff:
"Cartoonish landing puff, short burst of retro air, arcade style, soft and bouncy"

Player Melee Hit:
"Retro arcade melee impact, punchy thud, slight cartoon exaggeration"

Player Ranged Fire:
"Retro arcade shooter, small energy projectile launch, crisp and zippy"

Weapon & Power-Up Sounds
Nova Shot (Radial Pulse):
"Expanding retro pulse sound, energetic and light, arcade magic tone"

Lightning Strike Activation:
"Sharp retro zap with slight crackle, short and powerful, cartoon magic"

Power-Up Pickup:
"Happy 16-bit chime, quick upward arpeggio, playful"

Enemy Sounds
Ghost Attack Swipe:
"Wispy retro swipe sound, eerie but light, fast"

Skeleton Walk (Clatter Footsteps):
"Light clattering footsteps, bone-like, retro 16-bit arcade style"

Skeleton Shooter Fire:
"Retro small arrow launch, sharp pluck sound, quick"

Bat Flap:
"Fast flapping wings, retro arcade cartoon style"

Bat Dive Bomb:
"Rapid dive woosh, compressed 16-bit retro vibe"

Spider Web Shot:
"Sticky splat throw, retro texture, slimy but cartoony"

Zombie Moan:
"Slow cartoonish zombie moan, not scary, retro muffled"

Barrel and Crate Sounds
Crate Drop:
"Heavy wooden thud, short, retro compressed impact"

Barrel Explosion:
"Retro cartoon barrel explosion, punchy, compressed, short fiery burst"

Shrapnel Hit:
"Small ricochet ping, metal sound, 16-bit arcade style"

Environmental Sounds
Spawner Activation:
"Mysterious retro portal hum, subtle looping"

Hidden Soul Token Pickup:
"Mystical 16-bit sparkle chime, short and rewarding"

UI and Misc
Menu Confirm Click:
"Retro arcade menu confirm sound, soft blip, positive"

Menu Cancel Back:
"Retro arcade cancel sound, quick descending blip"

Bonus Tips:
For every movement, impact, and special action, it's helpful to have slight variations (2–3 versions) to avoid sound repetition fatigue.

Make weapon and impact sounds slightly exaggerated — realism is less important than "feels good" timing and punchiness.
