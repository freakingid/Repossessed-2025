20250313
DONE * Add Skeleton enemy and SkeletonSpawner

DONE * Add Zombie enemy and ZombieSpawner

* Skeleton needs AI that lets it find player around walls.

* I think Ghost.gd has a lot of logic that could go in BaseEnemy.gd??

* I think player bullets are only hitting with "1" hard-coded amount of damage.

WORK * Need to make sure player is damaging ghost enemies during melee.
** First, it is a hard-coded "1" of damage, but should be "melee_power" property we need to set up in all characters, Player and Enemies alike.
** Second, it is only dealing damage on the first hit to a Ghost. There is possibly a problem with the "invincible" flag not changing? YES that is the issue, if the player is right next to the ghost, gets hit, gets invincible flag set, but then the ghost is not damaged by the Melee Area but the ghost does do damage to the Player themselves (a different collision, technically.)

WORK * Add more walls into the demo room for testing.
** I added some, and a vertical pattern, but need some more.

WORK * What is limit of total player shots?

## Animations
* Need animated player sprite

* Need animated ghost sprite

* Need animated skeleton sprite

* Need animated zombie sprite

## Gems
* Need to drop gems from destroyed enemies

* Need to allow player to pick up gems

* Need gems to go away after a time. Blink during the last 33% of life?

* Need to track gems carried by player, globally between levels??

* Need to track gems in the HUD near the score.


20250312
DONE * Implement BaseClass for enemies.
DONE * Subclass existing Ghost enemy.

20250311
DONE * Next thing to do is make bullets die when they hit walls in the room.
DONE * 2. Displaying Player Score in the GUI
DONE * Show healthbar above player
DONE * Allow more ghosts at one time.
** I set it to 15 or 25
DONE * I don't think destroying the ghost spawner actually awarded the points to the player

20250310
* Good tilesetlayer video, including z-index so you can walk behind top of trees:
https://www.youtube.com/watch?v=43sJIWaj2Yw

Layers:
1: Player
2: Player bullet
3: Ghost (presumably most enemies)
4: Spawners
5: Walls (blockers in general?)

=========================================================
Character and object properties:

Characters (Player, Enemies)
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.
* base_fire_rate: affects cooldown between each bullet fired from ranged weapon
* max_shots_in_level: determines how many bullets fired from the player can exist in the game level at any given time.
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.

Characters (Enemies Only)
* score_value: how much score is awarded to the player when the object is destroyed

Bullets
* lifespan: how long does the object live before automatic destruction
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.

Enemy Spawners
* spawn_interval: how frequently does the spawner attempt a roll of the dice to potentially spawn a new enemy
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* score_value: how much score is awarded to the player when the object is destroyed

Global
* max_ghosts
* max_skeletons
* max_{enemy_type}

=========================================================
== Optimizations
=========================================================
1. Using a pool of instances that is initialized at game startup, then moved off screen or whatever rather than deleted when the ghost / etc is destroyed. Idea is to save the overhead of allocating new instances. Is this helpful?

2. Something with Tile collisions. Instead of a collision box for every 64x64 tile, can we have a collision box, and stretch it into a rectangle over a long span of boxes? Is this helpful?
