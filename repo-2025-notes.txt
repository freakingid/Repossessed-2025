202250317
* Let's redo collisions without the Area2D. That was only there to allow specific melee hit areas, and I don't need that. Any collision with the player and an enemy is considered a melee hit.



20250316
TEST * Yesterday asked ChatGPT about the 4 enemy character scripts, optimizations. Answer is waiting for me.

WORK * Fix _on_body_entered and bullets handling in BaseEnemy, Ghost, Skeleton, Zombie
** Bullets are getting closer. We had it all fixed up, but then we changed something for cleanliness and now bullets do not collide with enemies at all. Something to do with hooking up the signal on_body_entered to the Area2D within each of the enemies. We have sort of done this with the Player for Melee with Enemies, but now we are needing to do it with Bullets. I think Bullets might be a different node type, but I am not sure.

===================================================
== Explain collision nodes
== For Enemies: Ghost, Skeleton, Zombies at this time 3/16
===================================================
Ghost (CharacterBody2D)
â”œâ”€â”€ CollisionShape2D  âœ… (Movement & physics collisions)
â”œâ”€â”€ Area2D  âœ… (Detection of bullets & melee)
â”‚   â”œâ”€â”€ CollisionShape2D  âœ… (Defines the detection area)
ðŸ“Œ Purpose of Each Node
Ghost > CollisionShape2D (Same for Skeleton & Zombie)
	Used for movement & physics collisions.
	Handles collision with walls, players, and other enemies.
	This ensures the enemy doesnâ€™t walk through walls or stack on top of others.
Ghost > Area2D (Same for Skeleton & Zombie)
	Used for detecting bullets & melee combat.
	Triggers the body_entered() function in BaseEnemy.gd when hit by a bullet or when touching the Player.
Ghost > Area2D > CollisionShape2D (Same for Skeleton & Zombie)
	Defines the hitbox for Area2D (i.e., detection range).
	Should be slightly larger than CollisionShape2D so that bullets register on impact.
	This ensures bullets & melee attacks trigger properly even if they donâ€™t physically overlap the enemyâ€™s main collision body.








* Also, the skeleton movement isn't really working the way I want. I asked ChatGPT about that, also.

* I think player bullets are only hitting with "1" hard-coded amount of damage.

WORK * What is limit of total player shots?

* Define and add character property initial values such as speed, health, damage, in some sort of dictionary.

20250315
DONE * Are skeletons able to damage player with melee??

DONE * I think Ghost.gd has a lot of logic that could go in BaseEnemy.gd??

DONE * Need to make sure player is damaging ghost enemies during melee.

DONE * Fix Enemy with high health; during melee; getting stuck on player.

## Animations
* Need animated player sprite

* Need animated ghost sprite

* Need animated skeleton sprite

* Need animated zombie sprite

## Gems
* Need to drop gems from destroyed enemies

* Need to allow player to pick up gems

* Need gems to go away after a time. Blink during the last 33% of life?

* Need to track gems carried by player, globally between levels??

* Need to track gems in the HUD near the score.



20250314
DONE * I would like to keep enemies from running over the top of each other.
** This works for Ghosts and Zombies, who use dumb movement, but not for Skeletons. Still working on it.
** "jitter" doesn't really seem to happen at all?
** Solution seemed to be making the collision shapes larger to fit the sprites more appropriately.



20250313
DONE * Add Skeleton enemy and SkeletonSpawner

DONE * Add Zombie enemy and ZombieSpawner

DONE * Add more walls into the demo room for testing.

DONE * Skeleton needs AI that lets it find player around walls.
** Using what we call "Basic Wall Avoidance" with Raycasts.

DONE * I would like to keep enemies from running over the top of each other.
** This works for Ghosts and Zombies, who use dumb movement, but not for Skeletons. Still working on it.
** "jitter" doesn't really seem to happen at all?
** Solution seemed to be making the collision shapes larger to fit the sprites more appropriately.

20250312
DONE * Implement BaseClass for enemies.
DONE * Subclass existing Ghost enemy.

20250311
DONE * Next thing to do is make bullets die when they hit walls in the room.
DONE * 2. Displaying Player Score in the GUI
DONE * Show healthbar above player
DONE * Allow more ghosts at one time.
** I set it to 15 or 25
DONE * I don't think destroying the ghost spawner actually awarded the points to the player

20250310
* Good tilesetlayer video, including z-index so you can walk behind top of trees:
https://www.youtube.com/watch?v=43sJIWaj2Yw







=========================================================
## Resources
=========================================================
* Good tilesetlayer video, including z-index so you can walk behind top of trees:
https://www.youtube.com/watch?v=43sJIWaj2Yw








=========================================================
## Layers
=========================================================
1: Player
2: Player bullet
3: Ghost (presumably most enemies)
4: Spawners
5: Walls (blockers in general?)








=========================================================
Character and object properties:
=========================================================
Characters (Player, Enemies)
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.
* base_fire_rate: affects cooldown between each bullet fired from ranged weapon
* max_shots_in_level: determines how many bullets fired from the player can exist in the game level at any given time.
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.

Characters (Enemies Only)
* score_value: how much score is awarded to the player when the object is destroyed

Bullets
* lifespan: how long does the object live before automatic destruction
* power: how much damage does the object do during a collision with another object
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* base_speed: how fast can the object normally move. This is a property set for the object at instantiation. Actual speed at any given point in the game can be affected by other factors, such as slowing down while walking through mud, or speeding up when possessing a speed-boosting powerup.

Enemy Spawners
* spawn_interval: how frequently does the spawner attempt a roll of the dice to potentially spawn a new enemy
* max_health: how much health the object starts out with
* health: tracks current health of the object. At 0, the object dies. Starts out at max_health.
* score_value: how much score is awarded to the player when the object is destroyed

Global
* max_ghosts
* max_skeletons
* max_{enemy_type}








=========================================================
== Optimizations
=========================================================
1. Using a pool of instances that is initialized at game startup, then moved off screen or whatever rather than deleted when the ghost / etc is destroyed. Idea is to save the overhead of allocating new instances. Is this helpful?

2. Something with Tile collisions. Instead of a collision box for every 64x64 tile, can we have a collision box, and stretch it into a rectangle over a long span of boxes? Is this helpful?
